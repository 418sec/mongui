#!/usr/bin/env node

/* global process */

/**
 * Module dependencies.
 */

var app = require('../app')
,	fs = require('fs')
,	debug = require('debug')('mongui:server');


/**
 * Get port from environment and store in Express.
 */

var conf = app.get('conf');
var port = parseInt(process.env.PORT, 10) || process.argv[2] || conf.port;

app.set('port', port);

/**
 * Create HTTP server.
 */

var server;

if(conf.ssl){
	var https = require('https');
	var config = {
		key: fs.readFileSync(conf.ssl.key),
		cert: fs.readFileSync(conf.ssl.cert)
	};
	
	server = https.createServer(config, app);
} else {
	var http = require('http');
	server = http.createServer(app);
}

/**
 * Listen on provided port, on all network interfaces.
 */

app.on('dbconnected', function(){
	server.listen(port);
});

server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 * @param {Error} error
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  console.info('Listening on port ' + server.address().port);
}
